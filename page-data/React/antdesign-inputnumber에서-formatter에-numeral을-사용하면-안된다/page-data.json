{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/antdesign-inputnumber에서-formatter에-numeral을-사용하면-안된다/","result":{"data":{"site":{"siteMetadata":{"title":"CyanLH.github.io","author":"CyanLH","siteUrl":"https://CyanLH.github.io","comment":{"disqusShortName":"","utterances":"CyanLH/CyanLH.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"4a9bd438-e2f6-53ed-a35d-79475e9a4826","excerpt":"Ant.Design의 InputNumber 컴포넌트에 숫자를 이나 처럼 표시하려 했다.\n처음엔 간편히  라이브러리를 활용할 생각으로 처럼 사용했지만 를 누르면 숫자 단위가 늘어나고 소수점 이하 자리 입력이 불가능 한 등 골치아픈 버그가 생겼다. 다음과 같이 정규표현식을 사용해 해결 사실 Ant.Design 문서만 잘 살펴도 이런 일이 없었을텐데 완전 불찰이었다.\n그리고 새삼 정규표현식에 대한 공부가 더 필요하다고 느꼈다. 정규표현식에 대한 정리를 블로그에 포스팅 해도 좋을것 같음.","html":"<p>Ant.Design의 InputNumber 컴포넌트에 숫자를 <code class=\"language-text\">10,000</code>이나 처럼 표시하려 했다.<br/>\n처음엔 간편히 <code class=\"language-text\">numeral</code> 라이브러리를 활용할 생각으로</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">InputNumber</span></span>\n    <span class=\"token attr-name\">formatter</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token function\">numeral</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0,000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>처럼 사용했지만 <code class=\"language-text\">backspace</code>를 누르면 숫자 단위가 늘어나고 소수점 이하 자리 입력이 불가능 한 등 골치아픈 버그가 생겼다.</p>\n<hr>\n<p>다음과 같이 정규표현식을 사용해 해결</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">InputNumber</span></span>\n    <span class=\"token attr-name\">formatter</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\B(?=(\\d{3})+(?!\\d))</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token attr-name\">parser</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> value<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\$\\s?|(,*)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>사실 Ant.Design 문서만 잘 살펴도 이런 일이 없었을텐데 완전 불찰이었다.<br/>\n그리고 새삼 정규표현식에 대한 공부가 더 필요하다고 느꼈다. 정규표현식에 대한 정리를 블로그에 포스팅 해도 좋을것 같음.</p>","frontmatter":{"title":"AntDesign InputNumber에서 formatter에 numeral을 사용하면 안된다","date":"March 03, 2021"}}},"pageContext":{"slug":"/React/antdesign-inputnumber에서-formatter에-numeral을-사용하면-안된다/","previous":{"fields":{"slug":"/Update/gatsbyjs-플러그인-추가/"},"frontmatter":{"title":"GatsbyJS 플러그인 추가","category":"Update","draft":false}},"next":null}},"staticQueryHashes":["3128451518","521680639"]}